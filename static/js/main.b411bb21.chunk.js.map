{"version":3,"sources":["pages/home/index.js","index.js","contexts/WalletSelectorContext.jsx","components/Content.jsx","components/SignIn.jsx","components/Form.jsx","components/Messages.jsx"],"names":["Home","WalletSelectorContext","Content","ReactDOM","render","document","getElementById","React","createContext","WalletSelectorContextProvider","children","useState","selector","setSelector","accountId","setAccountId","accounts","setAccounts","syncAccountState","currentAccountId","newAccounts","length","localStorage","removeItem","newAccountId","some","x","setItem","useEffect","NearWalletSelector","init","network","contractId","wallets","setupNearWallet","iconUrl","nearWalletIconUrl","setupSender","senderWalletIconUrl","then","instance","getAccounts","a","getItem","window","catch","err","console","error","alert","subscription","on","e","remove","Provider","value","useWalletSelector","context","useContext","Error","BOATLOAD_OF_GAS","utils","format","parseNearAmount","account","setAccount","messages","setMessages","loading","setLoading","getAccount","useCallback","nodeUrl","provider","providers","JsonRpcProvider","url","query","request_type","finality","account_id","data","getMessages","getContractId","method_name","args_base64","res","JSON","parse","Buffer","from","result","toString","nextAccount","handleSubmit","preventDefault","target","elements","fieldset","message","donation","disabled","signAndSendTransaction","signerId","actions","type","params","methodName","args","gas","deposit","log","nextMessages","focus","style","marginRight","onClick","signOut","show","currentIndex","findIndex","nextIndex","nextAccountId","onSubmit","SignIn","Form","id","className","htmlFor","autoComplete","autoFocus","required","defaultValue","max","Big","amount","div","min","step","title","Messages","reverse","map","i","d","Date","parseInt","timestamp","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","second","getSeconds","formattedDate","randomColor","Math","floor","random","backgroundColor","author"],"mappings":"sLAgBeA,EAXF,WACT,OACI,eAAC,WAAD,WACI,iDACA,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,U,OCJhBC,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,U,sMCC5CL,EACJM,IAAMC,cAAc,MAETC,EAAgC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9C,EAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAS,MAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAmB,SACvBC,EACAC,GAEA,IAAKA,EAAYC,OAKf,OAJAC,aAAaC,WAAW,aACxBR,EAAa,WACbE,EAAY,IAKd,IAGMO,EAFJL,GACAC,EAAYK,MAAK,SAACC,GAAD,OAAOA,EAAEZ,YAAcK,KAEtCA,EACAC,EAAY,GAAGN,UAEnBQ,aAAaK,QAAQ,YAAaH,GAClCT,EAAaS,GACbP,EAAYG,IA0Cd,OAvCAQ,qBAAU,WACRC,IAAmBC,KAAK,CACtBC,QAAS,UACTC,WAAY,0BACZC,QAAS,CACPC,YAAgB,CACdC,QAASC,MAEXC,YAAY,CACVF,QAASG,SAIZC,MAAK,SAACC,GACL,OAAOA,EAASC,cAAcF,KAAvB,uCAA4B,WAAOnB,GAAP,SAAAsB,EAAA,sDACjCxB,EAAiBI,aAAaqB,QAAQ,aAAcvB,GAEpDwB,OAAOhC,SAAW4B,EAClB3B,EAAY2B,GAJqB,2CAA5B,0DAORK,OAAM,SAACC,GACNC,QAAQC,MAAMF,GACdG,MAAM,6CAET,IAEHrB,qBAAU,WACR,GAAKhB,EAAL,CAIA,IAAMsC,EAAetC,EAASuC,GAAG,mBAAmB,SAACC,GACnDlC,EAAiBJ,EAAWsC,EAAEpC,aAGhC,OAAO,kBAAMkC,EAAaG,aACzB,CAACzC,EAAUE,IAETF,EAKH,cAACX,EAAsBqD,SAAvB,CACEC,MAAO,CACL3C,WACAI,WACAF,YACAC,gBALJ,SAQGL,IAZI,MAiBJ,SAAS8C,IACd,IAAMC,EAAUC,qBAAWzD,GAE3B,IAAKwD,EACH,MAAM,IAAIE,MACR,yEAIJ,OAAOF,I,6ICjGHG,EAAkBC,QAAMC,OAAOC,gBAAgB,iBA6KtC7D,IA3KA,WACb,MAAwDsD,cAAhD5C,EAAR,EAAQA,SAAUI,EAAlB,EAAkBA,SAAUF,EAA5B,EAA4BA,UAAWC,EAAvC,EAAuCA,aACvC,EAA8BJ,mBAAS,MAAvC,mBAAOqD,EAAP,KAAgBC,EAAhB,KACA,EAAgCtD,mBAAS,IAAzC,mBAAOuD,EAAP,KAAiBC,EAAjB,KACA,EAA8BxD,oBAAS,GAAvC,mBAAOyD,EAAP,KAAgBC,EAAhB,KAEMC,EAAaC,sBAAW,sBAAC,8BAAA7B,EAAA,yDACxB5B,EADwB,yCAEpB,MAFoB,cAKrB0D,EAAY5D,EAASmB,QAArByC,QACFC,EAAW,IAAIC,YAAUC,gBAAgB,CAAEC,IAAKJ,IANzB,kBAQtBC,EACJI,MAAM,CACLC,aAAc,eACdC,SAAU,QACVC,WAAYlE,IAEbyB,MAAK,SAAC0C,GAAD,mBAAC,eACFA,GADC,IAEJD,WAAYlE,QAhBa,2CAkB5B,CAACA,EAAWF,EAASmB,UAElBmD,EAAcX,uBAAY,WAK9B,OAJiB,IAAIG,YAAUC,gBAAgB,CAC7CC,IAAKhE,EAASmB,QAAQyC,UAIrBK,MAAM,CACLC,aAAc,gBACdE,WAAYpE,EAASuE,gBACrBC,YAAa,eACbC,YAAa,GACbN,SAAU,eAEXxC,MAAK,SAAC+C,GAAD,OAASC,KAAKC,MAAMC,EAAOC,KAAKJ,EAAIK,QAAQC,iBACnD,CAAChF,IAEJgB,qBAAU,WACRsD,IAAc3C,KAAK4B,KAClB,IAEHvC,qBAAU,WACR,IAAKd,EACH,OAAOmD,EAAW,MAGpBI,GAAW,GAEXC,IAAa/B,MAAK,SAACsD,GACjB5B,EAAW4B,GACXxB,GAAW,QAEZ,CAACvD,EAAWwD,IAEf,IAyBMwB,EAAevB,uBACnB,SAACnB,GACCA,EAAE2C,iBAEF,MAAwC3C,EAAE4C,OAAOC,SAAzCC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,SAE3BF,EAASG,UAAW,EAEpBzF,EACG0F,uBAAuB,CACtBC,SAAUzF,EACV0F,QAAS,CACP,CACEC,KAAM,eACNC,OAAQ,CACNC,WAAY,cACZC,KAAM,CAAET,QAASA,EAAQ5C,OACzBsD,IAAKjD,EACLkD,QAASjD,QAAMC,OAAOC,gBAAgBqC,EAAS7C,OAAS,UAK/DV,OAAM,SAACC,GAIN,MAHAG,MAAM,yBACNF,QAAQgE,IAAI,yBAENjE,KAEPP,MAAK,WACJ,OAAO2C,IACJ3C,MAAK,SAACyE,GACL7C,EAAY6C,GACZb,EAAQ5C,MAAQ,GAChB6C,EAAS7C,MAzHI,IA0Hb2C,EAASG,UAAW,EACpBF,EAAQc,WAETpE,OAAM,SAACC,GAIN,MAHAG,MAAM,8BACNF,QAAQgE,IAAI,8BAENjE,QAGXD,OAAM,SAACC,GACNC,QAAQC,MAAMF,GAEdoD,EAASG,UAAW,OAG1B,CAACzF,EAAUE,EAAWoE,IAGxB,OAAId,EACK,KAGJJ,EAYH,eAAC,WAAD,WACE,gCACE,wBAAQkD,MAAO,CAAEC,YAAa,QAAUC,QA7FxB,WACpBxG,EAASyG,UAAUxE,OAAM,SAACC,GACxBC,QAAQgE,IAAI,sBACZhE,QAAQC,MAAMF,OA0FZ,qBACA,wBAAQsE,QAvFe,WAC3BxG,EAAS0G,QAsFL,6BACCtG,EAASK,OAAS,GACjB,wBAAQ+F,QArFY,WAC1B,IAAMG,EAAevG,EAASwG,WAAU,SAAC9F,GAAD,OAAOA,EAAEZ,YAAcA,KACzD2G,EAAYF,EAAevG,EAASK,OAAS,EAAIkG,EAAe,EAAI,EAEpEG,EAAgB1G,EAASyG,GAAW3G,UAE1CC,EAAa2G,GACbzE,MAAM,uBAAyByE,IA8EzB,+BAGJ,cAAC,IAAD,CACE1D,QAASA,EACT2D,SAAU,SAACvE,GAAD,OAAO0C,EAAa1C,MAEhC,cAAC,IAAD,CAAUc,SAAUA,OAtBpB,eAAC,WAAD,WACE,8BACE,wBAAQkD,QAvFK,WACnBxG,EAAS0G,QAsFH,sBAEF,cAAC,IAAD,U,yDC9JR,kDAEe,SAASM,IACtB,OACE,qCACE,6XAOA,8IAIA,yE,gCChBN,mEAGe,SAASC,EAAT,GAAiD,IAAjCF,EAAgC,EAAhCA,SAAU7G,EAAsB,EAAtBA,UAAWkD,EAAW,EAAXA,QAClD,OACE,sBAAM2D,SAAUA,EAAhB,SACE,2BAAUG,GAAG,WAAb,UACE,sDAA0BhH,EAA1B,OACA,oBAAGiH,UAAU,YAAb,UACE,uBAAOC,QAAQ,UAAf,sBACA,uBACEC,aAAa,MACbC,WAAS,EACTJ,GAAG,UACHK,UAAQ,OAGZ,8BACE,uBAAOH,QAAQ,WAAf,kCACA,uBACEC,aAAa,MACbG,aAAc,IACdN,GAAG,WACHO,IAAKC,IAAItE,EAAQuE,QACZC,IADA,SACI,GAAM,KACV5C,WACL6C,IAAI,IACJC,KAAK,OACLjC,KAAK,WAEP,sBAAMkC,MAAM,cAAZ,uBAEF,wBAAQlC,KAAK,SAAb,yB,gCChCR,kDAEe,SAASmC,EAAT,GAA+B,IAAZ1E,EAAW,EAAXA,SAC9B,OACI,qCACI,0CACCA,EAAS2E,UAAUC,KAAI,SAAC3C,EAAS4C,GAE1B,IAAMC,EAAI,IAAIC,KAAKC,SAAS/C,EAAQgD,WAAa,KAC7CC,EAAOJ,EAAEK,UACTC,EAAQN,EAAEO,WAAa,EACvBC,EAAOR,EAAES,cACTC,EAAOV,EAAEW,WACTC,EAASZ,EAAEa,aACXC,EAASd,EAAEe,aACTC,EAAa,UAAMZ,EAAN,YAAcE,EAAd,YAAuBE,EAAvB,YAA+BE,EAA/B,YAAuCE,EAAvC,YAAiDE,GAC9DG,EAAcC,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBxE,SAAS,IAEhE,OAAO,sBAEHsB,MAAO,CAAEmD,gBAAiB,IAAMJ,GAChClC,UAAW5B,EAAQW,QAAU,EAAI,aAAe,GAH7C,UAKH,iCAASX,EAAQmE,SALd,IAMH,oBAAGvC,UAAU,eAAb,UAA4B,+BAAO5B,EAAQA,UAAe,oDAAuB6D,UAL5EjB,W","file":"static/js/main.b411bb21.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\n\nimport Content from \"../../components/Content\";\nimport { WalletSelectorContextProvider } from \"../../contexts/WalletSelectorContext\";\n\nconst Home = () => {\n    return (\n        <Fragment>\n            <h1>NEAR Guest Book</h1>\n            <WalletSelectorContextProvider>\n                <Content />\n            </WalletSelectorContextProvider>\n        </Fragment>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Home from  './pages/home';\nimport './global.css'\n\nReactDOM.render(<Home />, document.getElementById(\"root\"));\n","import React, { useContext, useEffect, useState } from \"react\";\nimport NearWalletSelector from \"@near-wallet-selector/core\";\nimport { setupNearWallet } from \"@near-wallet-selector/near-wallet\";\nimport { setupSender } from \"@near-wallet-selector/sender\";\nimport nearWalletIconUrl from \"@near-wallet-selector/near-wallet/assets/near-wallet-icon.png\";\nimport senderWalletIconUrl from \"@near-wallet-selector/sender/assets/sender-icon.png\";\n\nconst WalletSelectorContext =\n  React.createContext(null);\n\nexport const WalletSelectorContextProvider = ({ children }) => {\n  const [selector, setSelector] = useState(null);\n  const [accountId, setAccountId] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n\n  const syncAccountState = (\n    currentAccountId,\n    newAccounts\n  ) => {\n    if (!newAccounts.length) {\n      localStorage.removeItem(\"accountId\");\n      setAccountId(null);\n      setAccounts([]);\n\n      return;\n    }\n\n    const validAccountId =\n      currentAccountId &&\n      newAccounts.some((x) => x.accountId === currentAccountId);\n    const newAccountId = validAccountId\n      ? currentAccountId\n      : newAccounts[0].accountId;\n\n    localStorage.setItem(\"accountId\", newAccountId);\n    setAccountId(newAccountId);\n    setAccounts(newAccounts);\n  };\n\n  useEffect(() => {\n    NearWalletSelector.init({\n      network: \"testnet\",\n      contractId: \"fourthchallenge.testnet\",\n      wallets: [\n        setupNearWallet({\n          iconUrl: nearWalletIconUrl\n        }),\n        setupSender({\n          iconUrl: senderWalletIconUrl\n        }),\n      ],\n    })\n      .then((instance) => {\n        return instance.getAccounts().then(async (newAccounts) => {\n          syncAccountState(localStorage.getItem(\"accountId\"), newAccounts);\n\n          window.selector = instance;\n          setSelector(instance);\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n        alert(\"Failed to initialise wallet selector\");\n      });\n  }, []);\n\n  useEffect(() => {\n    if (!selector) {\n      return;\n    }\n\n    const subscription = selector.on(\"accountsChanged\", (e) => {\n      syncAccountState(accountId, e.accounts);\n    });\n\n    return () => subscription.remove();\n  }, [selector, accountId]);\n\n  if (!selector) {\n    return null;\n  }\n\n  return (\n    <WalletSelectorContext.Provider\n      value={{\n        selector,\n        accounts,\n        accountId,\n        setAccountId,\n      }}\n    >\n      {children}\n    </WalletSelectorContext.Provider>\n  );\n};\n\nexport function useWalletSelector() {\n  const context = useContext(WalletSelectorContext);\n\n  if (!context) {\n    throw new Error(\n      \"useWalletSelector must be used within a WalletSelectorContextProvider\"\n    );\n  }\n\n  return context;\n}\n","import React, { Fragment, useCallback, useEffect, useState } from \"react\";\nimport { providers, utils } from \"near-api-js\";\nimport { useWalletSelector } from \"../contexts/WalletSelectorContext\";\nimport SignIn from \"./SignIn\";\nimport Form from \"./Form\";\nimport Messages from \"./Messages\";\n\nconst SUGGESTED_DONATION = \"0\";\nconst BOATLOAD_OF_GAS = utils.format.parseNearAmount(\"0.00000000003\");\n\nconst Content= () => {\n  const { selector, accounts, accountId, setAccountId } = useWalletSelector();\n  const [account, setAccount] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const getAccount = useCallback(async () => {\n    if (!accountId) {\n      return null;\n    }\n\n    const { nodeUrl } = selector.network;\n    const provider = new providers.JsonRpcProvider({ url: nodeUrl });\n\n    return provider\n      .query({\n        request_type: \"view_account\",\n        finality: \"final\",\n        account_id: accountId,\n      })\n      .then((data) => ({\n        ...data,\n        account_id: accountId,\n      }));\n  }, [accountId, selector.network]);\n\n  const getMessages = useCallback(() => {\n    const provider = new providers.JsonRpcProvider({\n      url: selector.network.nodeUrl,\n    });\n\n    return provider\n      .query({\n        request_type: \"call_function\",\n        account_id: selector.getContractId(),\n        method_name: \"get_messages\",\n        args_base64: \"\",\n        finality: \"optimistic\",\n      })\n      .then((res) => JSON.parse(Buffer.from(res.result).toString()));\n  }, [selector]);\n\n  useEffect(() => {\n    getMessages().then(setMessages);\n  }, []);\n\n  useEffect(() => {\n    if (!accountId) {\n      return setAccount(null);\n    }\n\n    setLoading(true);\n\n    getAccount().then((nextAccount) => {\n      setAccount(nextAccount);\n      setLoading(false);\n    });\n  }, [accountId, getAccount]);\n\n  const handleSignIn = () => {\n    selector.show();\n  };\n\n  const handleSignOut = () => {\n    selector.signOut().catch((err) => {\n      console.log(\"Failed to sign out\");\n      console.error(err);\n    });\n  };\n\n  const handleSwitchProvider = () => {\n    selector.show();\n  };\n\n  const handleSwitchAccount = () => {\n    const currentIndex = accounts.findIndex((x) => x.accountId === accountId);\n    const nextIndex = currentIndex < accounts.length - 1 ? currentIndex + 1 : 0;\n\n    const nextAccountId = accounts[nextIndex].accountId;\n\n    setAccountId(nextAccountId);\n    alert(\"Switched account to \" + nextAccountId);\n  };\n\n  const handleSubmit = useCallback(\n    (e) => {\n      e.preventDefault();\n\n      const { fieldset, message, donation } = e.target.elements;\n\n      fieldset.disabled = true;\n\n      selector\n        .signAndSendTransaction({\n          signerId: accountId,\n          actions: [\n            {\n              type: \"FunctionCall\",\n              params: {\n                methodName: \"add_message\",\n                args: { message: message.value },\n                gas: BOATLOAD_OF_GAS,\n                deposit: utils.format.parseNearAmount(donation.value || \"0\"),\n              },\n            },\n          ],\n        })\n        .catch((err) => {\n          alert(\"Failed to add message\");\n          console.log(\"Failed to add message\");\n\n          throw err;\n        })\n        .then(() => {\n          return getMessages()\n            .then((nextMessages) => {\n              setMessages(nextMessages);\n              message.value = \"\";\n              donation.value = SUGGESTED_DONATION;\n              fieldset.disabled = false;\n              message.focus();\n            })\n            .catch((err) => {\n              alert(\"Failed to refresh messages\");\n              console.log(\"Failed to refresh messages\");\n\n              throw err;\n            });\n        })\n        .catch((err) => {\n          console.error(err);\n\n          fieldset.disabled = false;\n        });\n    },\n    [selector, accountId, getMessages]\n  );\n\n  if (loading) {\n    return null;\n  }\n\n  if (!account) {\n    return (\n      <Fragment>\n        <div>\n          <button onClick={handleSignIn}>Log in</button>\n        </div>\n        <SignIn />\n      </Fragment>\n    );\n  }\n\n  return (\n    <Fragment>\n      <div>\n        <button style={{ marginRight: '15px' }} onClick={handleSignOut}>Log out</button>\n        <button onClick={handleSwitchProvider}>Switch Provider</button>\n        {accounts.length > 1 && (\n          <button onClick={handleSwitchAccount}>Switch Account</button>\n        )}\n      </div>\n      <Form\n        account={account}\n        onSubmit={(e) => handleSubmit(e)}\n      />\n      <Messages messages={messages} />\n    </Fragment>\n  );\n};\n\nexport default Content;\n","import React from 'react';\n\nexport default function SignIn() {\n  return (\n    <>\n      <p>\n          This app demonstrates a key element of NEAR’s UX: once an app has\n          permission to make calls on behalf of a user (that is, once a user\n          signs in), the app can make calls to the blockchain for them without\n          prompting extra confirmation. So you’ll see that if you don’t\n          include a donation, your message gets posted right to the guest book.\n      </p>\n      <p>\n          But if you do add a donation, then NEAR will double-check that\n          you’re ok with sending money to this app.\n      </p>\n      <p>\n          Go ahead and sign in to try it out!\n      </p>\n    </>\n  );\n}\n","import React from 'react';\nimport Big from 'big.js';\n\nexport default function Form({ onSubmit, accountId, account }) {\n  return (\n    <form onSubmit={onSubmit}>\n      <fieldset id=\"fieldset\">\n        <p>Sign the guest book, { accountId }!</p>\n        <p className=\"highlight\">\n          <label htmlFor=\"message\">Message:</label>\n          <input\n            autoComplete=\"off\"\n            autoFocus\n            id=\"message\"\n            required\n          />\n        </p>\n        <p>\n          <label htmlFor=\"donation\">Donation (optional):</label>\n          <input\n            autoComplete=\"off\"\n            defaultValue={'0'}\n            id=\"donation\"\n            max={Big(account.amount)\n                .div(10 ** 24)\n                .toString()}\n            min=\"0\"\n            step=\"0.01\"\n            type=\"number\"\n          />\n          <span title=\"NEAR Tokens\">Ⓝ</span>\n        </p>\n        <button type=\"submit\">\n          Sign\n        </button>\n      </fieldset>\n    </form>\n  );\n}\n","import React from 'react';\n\nexport default function Messages({messages}) {\n    return (\n        <>\n            <h2>Messages</h2>\n            {messages.reverse().map((message, i) =>\n                {\n                    const d = new Date(parseInt(message.timestamp) / 1000000)\n                    let date = d.getDate();\n                    let month = d.getMonth() + 1;\n                    let year = d.getFullYear();\n                    let hour = d.getHours();\n                    let minute = d.getMinutes();\n                    let second = d.getSeconds();\n                    const formattedDate = `${date}.${month}.${year} ${hour}:${minute}:${second}`\n                    const randomColor = Math.floor(Math.random()*16777215).toString(16);\n\n                    return <div\n                        key={i}\n                        style={{ backgroundColor: '#' + randomColor }}\n                        className={message.deposit > 0 ? 'is-premium' : ''}\n                    >\n                        <strong>{message.author}</strong>:\n                        <p className=\"message-info\"><span>{message.message}</span><small>Was signed on: {formattedDate}</small></p>\n                    </div>\n                }\n            )}\n        </>\n    );\n}\n"],"sourceRoot":""}